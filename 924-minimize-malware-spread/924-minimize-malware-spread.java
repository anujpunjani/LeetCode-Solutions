class Solution {
    int size, infected;
    
    private void dfs(int src, boolean[] vis, int[][] graph, int[] initial) {
        
        if(vis[src] == true) return;
        
        vis[src] = true;
        size++;
        
        if(Arrays.binarySearch(initial, src) >= 0)
            infected++;
        
        for(int nbr = 0; nbr < graph.length; nbr++)
            if(graph[src][nbr] == 1)
                dfs(nbr, vis, graph, initial);
    }
    
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        Arrays.sort(initial);
        int ans = initial[0], maxSize = 0;
        boolean[] vis = new boolean[graph.length];
        
        for(int src : initial) {
            size = infected = 0;
            
            dfs(src, vis, graph, initial);
            
            if(maxSize < size && infected == 1) {
                maxSize = size;
                ans = src;
            }
        }
        
        return ans;
    }
}